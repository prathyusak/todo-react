{"version":3,"sources":["components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["CustomModal","activeItem","handleSubmit","useState","settitle","setdesc","compl","setcompl","handleChange","e","target","name","value","title","description","completed","className","onSubmit","htmlFor","type","onChange","placeholder","checked","App","show","setshow","todoList","settodoList","viewComp","setviewComp","setactiveItem","refreshList","axios","get","then","res","console","log","data","catch","err","useEffect","onClick","preventDefault","item","id","put","post","newItems","filter","map","editItem","delete","handleDelete","renderItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAGe,SAASA,EAAT,GAAoD,IAA5BC,EAA2B,EAA3BA,WAAWC,EAAgB,EAAhBA,aAAgB,EACrCC,mBAAS,IAD4B,mBACjDC,GADiD,aAEvCD,mBAAS,IAF8B,mBAElDE,GAFkD,aAGrCF,oBAAS,GAH4B,mBAGvDG,EAHuD,KAGjDC,EAHiD,KAItDC,EAAe,SAAAC,GACK,UAAlBA,EAAEC,OAAOC,MACXP,EAASK,EAAEC,OAAOE,OAClBX,EAAWY,MAAQJ,EAAEC,OAAOE,OACD,gBAAlBH,EAAEC,OAAOC,MAChBN,EAAQI,EAAEC,OAAOE,OACjBX,EAAWa,YAAYL,EAAEC,OAAOE,OACP,cAAlBH,EAAEC,OAAOC,OAChBJ,GAAUD,GACVL,EAAWc,UAA8B,OAAnBN,EAAEC,OAAOE,QAKrC,OACA,sBAAKI,UAAU,YAAf,UACI,iDACA,qBAAKA,UAAU,gBAAf,SACA,uBAAMC,SAAUf,EAAcc,UAAU,WAAxC,UAEM,uBAAOE,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OAAOR,KAAK,QACxBC,MAAOX,EAAWY,MAAQO,SAAUZ,EACpCa,YAAY,qBACT,uBACH,uBAAOH,QAAQ,cAAf,yBACA,uBACEC,KAAK,OACLR,KAAK,cACLC,MAAOX,EAAWa,YAClBM,SAAUZ,EACVa,YAAY,2BACZ,uBACA,wBAAOH,QAAQ,YAAf,UACA,uBACEC,KAAK,WACLR,KAAK,YACLW,QAASrB,EAAWc,UACpBK,SAAUZ,IALZ,eAQM,uBACR,wBAAQW,KAAK,SAASH,UAAU,gBAAhC,0B,oBC7CH,SAASO,IAAO,IAAD,EACLpB,oBAAS,GADJ,mBACrBqB,EADqB,KAChBC,EADgB,OAECtB,mBAAS,IAFV,mBAErBuB,EAFqB,KAEZC,EAFY,OAGCxB,oBAAS,GAHV,mBAGrByB,EAHqB,KAGZC,EAHY,OAIM1B,mBAAU,CAAEU,MAAO,GAAIC,YAAa,GAAGC,WAAW,IAJxD,mBAIrBd,EAJqB,KAIV6B,EAJU,KAMtBC,EAAc,WAClBC,IACCC,IAAI,oCACJC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,MAChBX,EAAYQ,EAAIG,SACjBC,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,OAE9BC,qBAAU,WACRV,MACC,IAuFA,OACG,uBAAMf,UAAU,UAAhB,UACE,oBAAIA,UAAU,6CAAd,sBACA,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,GAAf,UACE,wBAAQ0B,QAAS,WACfjB,GAAQ,GACRK,EAAe,CAAEjB,MAAO,GAAIC,YAAa,GAAGC,WAAW,KACpDC,UAAU,kBAHf,sBAMCQ,EACP,cAACxB,EAAD,CAAcC,WAAYA,EAAYC,aApG3B,SAACO,GACpBgB,GAASD,GACTf,EAAEkC,iBACFP,QAAQC,IAAIpC,GACZ,IAAM2C,EAAK3C,EAKR2C,EAAKC,GACPb,IACGc,IADH,0CAC0CF,EAAKC,GAD/C,KACsDD,GACnDV,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZJ,OAINC,IACGe,KAAK,mCAAoCH,GACzCV,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZJ,UA+EO,QA1EN,sBAAKf,UAAU,gBAAf,UACE,sBACE0B,QAAS,WAAMb,GAAY,IAC3Bb,UAAWY,EAAW,SAAW,GAFnC,sBAMA,sBACEc,QAAS,WAAMb,GAAY,IAC3Bb,UAAWY,EAAW,GAAK,SAF7B,2BAsEM,oBAAIZ,UAAU,8BAAd,SA7DQ,WACjB,IAAMgC,EAAWtB,EAASuB,QACzB,SAAAL,GAAI,OAAIA,EAAK7B,YAAca,KAW7B,OAAOoB,EAASE,KAAI,SAAAN,GAAI,OACtB,qBAEE5B,UAAU,oEAFZ,UAIE,sBACEA,UAAS,0BACPY,EAAW,iBAAmB,IAEhCf,MAAO+B,EAAK9B,YAJd,SAMG8B,EAAK/B,QAER,iCACE,wBACE6B,QAAS,kBAxBA,SAAAE,GACfd,EAAcc,GACdnB,GAAQ,GAsBa0B,CAASP,IACxB5B,UAAU,yBAFZ,kBAMA,wBACE0B,QAAS,kBA1BI,SAAAE,GACnBZ,IACCoB,OADD,0CAC2CR,EAAKC,KAC/CX,MAAK,SAAAC,GAAG,OAAIJ,OAuBQsB,CAAaT,IAC5B5B,UAAU,iBAFZ,yBAlBG4B,EAAKC,OA+CDS,eC9HjB,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1C,EAAD,MAEF2C,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.86366e1c.chunk.js","sourcesContent":["import {useState} from \"react\";\r\nimport './Modal.css'\r\n\r\nexport default function CustomModal  ({activeItem,handleSubmit})  {\r\n    const [title,settitle] = useState(\"\");\r\n    const [desc,setdesc] = useState(\"\");\r\n    const [compl,setcompl] = useState(false);\r\n      const handleChange = e => {\r\n          if (e.target.name === 'title') {\r\n            settitle(e.target.value)\r\n            activeItem.title = e.target.value\r\n          } else if (e.target.name === 'description') {\r\n              setdesc(e.target.value) \r\n              activeItem.description=e.target.value\r\n          } else if (e.target.name === 'completed') {\r\n              setcompl(!compl)\r\n              activeItem.completed=(e.target.value === \"on\") ? true:false\r\n              \r\n          }      \r\n      };\r\n\r\n        return (\r\n        <div className=\"modal-box\">\r\n            <header  > Todo Item </header>\r\n            <div className=\"modal-content\">\r\n            <form onSubmit={handleSubmit} className=\"form-div\">    \r\n                    \r\n                  <label htmlFor=\"title\">Title</label>\r\n                  <input type=\"text\" name=\"title\" \r\n                  value={activeItem.title}  onChange={handleChange}\r\n                  placeholder=\"Enter Todo Title\"\r\n                   /><br></br>\r\n                  <label htmlFor=\"description\">Description</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={activeItem.description}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Enter Todo description\"\r\n                  /><br></br>\r\n                    <label htmlFor=\"completed\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"completed\"\r\n                      checked={activeItem.completed}\r\n                      onChange={handleChange}\r\n                    />\r\n                    Completed\r\n                  </label><br></br>\r\n                  <button type=\"submit\" className=\"submit-button\" >\r\n                  Save\r\n                 </button>\r\n                \r\n             </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n","import React, { useState,useEffect } from \"react\";\nimport CustomModal from \"./components/Modal\";\nimport axios from \"axios\";\n\nexport default function App() {\n  const [show,setshow] = useState(false)\n  const [todoList,settodoList]=useState([])\n  const [viewComp,setviewComp]=useState(false)\n  const [activeItem,setactiveItem]= useState( { title: \"\", description: \"\",completed: false})\n  \n  const refreshList = () => {\n    axios\n    .get(\"http://localhost:8000/api/todos/\")\n    .then(res => {\n      console.log(res.data)\n      settodoList(res.data)})\n    .catch(err => console.log(err));\n  }\nuseEffect(() => {\n  refreshList();  \n}, [])\nconst handleSubmit = (e) => {\n  setshow(!show)\n  e.preventDefault();\n  console.log(activeItem)\n  const item=activeItem\n // if (!Number.isInteger(activeItem.id)) {\n //   activeItem.id = todoList.length +1\n //   settodoList(todoList.concat(activeItem)) \n // }  \n if (item.id) {\n   axios\n     .put(`http://localhost:8000/api/todos/${item.id}/`, item)\n     .then(res => {\n       console.log(res)\n       refreshList()}\n       );\n   return;\n }\n axios\n   .post(\"http://localhost:8000/api/todos/\", item)\n   .then(res => {\n     console.log(res)\n     refreshList()\n    });\n};\n    const renderTabList = () => {\n    return (\n      <div className=\"my-5 tab-list\">\n        <span\n          onClick={()=> {setviewComp(true)}}\n          className={viewComp ? \"active\" : \"\"}\n        >\n          complete\n        </span>\n        <span\n          onClick={()=> {setviewComp(false)}}\n          className={viewComp ? \"\" : \"active\"}\n        >\n          Incomplete\n        </span>\n      </div>\n    );\n  };\n  const renderItems = () => {\n     const newItems = todoList.filter(\n      item => item.completed === viewComp\n    );\n   const  editItem = item => {\n      setactiveItem(item)\n      setshow(true)\n    }\n    const handleDelete = item => {\n      axios\n      .delete(`http://localhost:8000/api/todos/${item.id}`)\n      .then(res => refreshList());\n    }\n    return newItems.map(item => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          className={`todo-title mr-2 ${\n            viewComp ? \"completed-todo\" : \"\"\n          }`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button\n            onClick={() => editItem(item)}\n            className=\"btn btn-secondary mr-2\"\n          >\n            Edit\n          </button>\n          <button\n            onClick={() => handleDelete(item)}\n            className=\"btn btn-danger\"\n          >\n            Delete\n          </button>\n        </span>\n      </li>\n    ));\n  };\n   return (\n      <main className=\"content\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n        <div className=\"row \">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"\">\n                <button onClick={()=>{\n                  setshow(true)\n                  setactiveItem( { title: \"\", description: \"\",completed: false})\n                  }} className=\"btn btn-primary\">\n                  Add task\n                </button>\n                {show ? (\n          <CustomModal  activeItem={activeItem} handleSubmit={handleSubmit} />\n        ) : null}\n              </div>\n              {renderTabList()}\n              <ul className=\"list-group list-group-flush\">\n                {renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>     \n      </main>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}